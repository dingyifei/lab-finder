{
  "permissions": {
    "allow": [
      "Bash(dir C:UsersyifeiDocumentsResearchdocs)",
      "Bash(md-tree explode:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(python3.11:*)",
      "Bash(py:*)",
      "Bash(venv/Scripts/python.exe:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(venv/Scripts/pip-compile:*)",
      "Bash(mv:*)",
      "Bash(dir:*)",
      "Bash(if not exist \"C:\\Users\\yifei\\Documents\\Research\\docs\\qa\\gates\" mkdir \"C:\\Users\\yifei\\Documents\\Research\\docs\\qa\\gates\")",
      "Bash(findstr:*)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(venvScriptspython.exe -m pytest tests/unit/test_validator.py -v --tb=short)",
      "Bash(venvScriptspython.exe -m pytest tests/unit/test_credential_manager.py -v --tb=short)",
      "Bash(ruff check:*)",
      "Bash(venvScriptspython.exe -m mypy:*)",
      "Bash(venvScriptspython.exe -m ruff check src/utils/ tests/unit/test_checkpoint_manager.py tests/unit/test_llm_helpers.py tests/unit/test_progress_tracker.py tests/unit/test_logger.py)",
      "Bash(npm --version)",
      "Bash(npm install:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(uv:*)",
      "Bash(pip install:*)",
      "Bash(npm search:*)",
      "Bash(uvx:*)",
      "Bash(venv\\Scripts\\pip-compile:*)",
      "Bash(venv/Scripts/pip install:*)",
      "Read(//c/**)",
      "Bash(git checkout:*)",
      "Bash(md-tree:*)",
      "Bash(test -d tests)",
      "Bash(venv/Scripts/pip list:*)",
      "Bash(test:*)",
      "Bash(do if [ -f \"docs/stories/$file\" ])",
      "Bash(venvScriptspython.exe -m pytest tests/unit/test_example.py tests/integration/test_example_integration.py -v --tb=short)",
      "Bash(venv\\Scripts\\python.exe -m ruff check:*)",
      "Bash(venvScriptspython.exe -m pytest tests/unit/test_profile_consolidator.py -v --tb=short)",
      "Bash(if not exist \".github\\workflows\" mkdir \".github\\workflows\")",
      "Bash(CI=true venv/Scripts/python.exe -m pytest tests/integration/ -v)",
      "Bash(git push:*)",
      "Bash(ruff format:*)",
      "Bash(CI=true venv/Scripts/python.exe -m pytest tests/integration/ -v --no-cov)",
      "Bash(pip show:*)",
      "Bash(venv/Scripts/ruff check:*)",
      "Bash(timeout:*)",
      "Bash(venv/Scripts/ruff format:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(if not exist \"docs\\qa\\gates\" mkdir \"docs\\qa\\gates\")",
      "WebFetch(domain:gist.github.com)",
      "Bash(venvScriptsruff.exe format:*)",
      "Bash(if not exist \"docs\\qa\\assessments\" mkdir \"docs\\qa\\assessments\")",
      "Bash(venv\\Scripts\\python.exe:*)",
      "Bash(del \"C:\\Users\\yifei\\Documents\\Research\\src\\utils\\web_scraper.py\")",
      "Bash(python -c \"import os; os.remove(''src/utils/web_scraper.py'')\")",
      "Bash(venv/Scripts/ruff.exe check:*)",
      "Bash(venvScriptspython.exe -m pytest tests/unit/test_department_filter.py -v --tb=short)",
      "WebFetch(domain:anthropic.mintlify.app)",
      "mcp__sequential__sequentialthinking",
      "Bash(del CLAUDE-SDK-SOLUTION.md)",
      "Bash(if [ -f \"INTEGRATION_TEST_RESULTS.md\" ])",
      "Bash(then echo \"EXISTS\")",
      "Bash(else echo \"NOT_FOUND\")"
    ],
    "deny": [],
    "ask": []
  }
}
